{"ast":null,"code":"var _jsxFileName = \"/Users/alexcalvert/Development/code/Shopify/front-end-application/spacestagram/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport '../assets/App.css';\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport Team from \"./Team\";\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\nimport RecruitDetails from \"./RecruitDetails\";\nimport NewHeroForm from \"./NewHeroForm\";\nimport TeamDetails from \"./TeamDetails\";\n/* Import Route and Switch properties from react-router dom.\n The former allows assigned routing to varying components \nmodel parent/child branch behavior as a sitemap, while\nthe former allow us the assignment itself. */\n// Tip: don't forget to run npm install react-router dom !\n\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = \"quqeczazJ4D6huLcVhNJljA58RhApMCyv3KleLZk\";\n\nfunction App() {\n  _s();\n\n  const [heroArray, setHeroArray] = useState([]);\n  const [heroArrayParse, setHeroArrayParse] = useState(0);\n  const [heroSelectionArray, setHeroSelectionArray] = useState([]);\n  const [isLoggedIn, setLogIn] = useState(false);\n  const [currentTeam, setCurrentTeam] = useState(null);\n  const [isLoadedHeroes, setIsLoadedHeroes] = useState(false);\n  const [nasaImage, setNasaImage] = useState(null); // const [teamArray, setTeamArray] = useState([])\n  // const [displayArray, setDisplayArray] = useState([])\n  // const [teamMemberArrayfromDB, setTeamMemberArrayfromDB] = ([])\n\n  const history = useHistory(); //callback function pass down to RecruitDetail page for the Enlist Btn\n\n  let flag = true;\n\n  const onHeroSelection = selectedHero => {\n    if (heroSelectionArray.length === 0) {\n      setHeroSelectionArray([...heroSelectionArray, selectedHero]);\n      console.log(heroSelectionArray);\n    } else {\n      heroSelectionArray.map(hero => {\n        // console.log(hero.id, selectedHero.id)\n        if (hero.id === selectedHero.id) {\n          flag = false;\n        }\n      });\n\n      if (flag) {\n        setHeroSelectionArray([...heroSelectionArray, selectedHero]);\n      }\n    } //add hero to the heroSelectionArray \n    // if (selectedHero.id)\n    //make this herocard disappear from RecruitList\n\n\n    const heroArrayAfterSelect = heroArray.filter(hero => hero.id !== selectedHero.id);\n    setHeroArray(heroArrayAfterSelect);\n  }; //callback fn pass down to HeroSelection.js for AddToTeamBtn\n\n\n  const onAddToTeamBtnClick = heroSelectionArray => {\n    // setTeamArray([...teamArray, heroSelectionArray])\n    console.log(heroSelectionArray);\n    heroSelectionArray.map(hero => {\n      fetch(\"http://localhost:3000/teamMember\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: currentTeam,\n          heroId: hero.id,\n          name: hero.name,\n          image: `${hero.thumbnail.path}.${hero.thumbnail.extension}`,\n          description: hero.description\n        })\n      }) // .then(history.push(\"/team\"))\n      .catch(error => console.error('Error:', error));\n    }); //clear out heroSelectionArray \n\n    setHeroSelectionArray([]);\n  }; //handle disselectBtn click on HeroSelection\n\n\n  const onDisselectBtnClickInSelection = disselectedHero => {\n    //change the heroSelectionArray (disappear on the selection section)\n    setHeroSelectionArray(heroSelectionArray.filter(selectedHero => selectedHero.name !== disselectedHero.name)); //change the heroArray (display on the recruit list section)\n\n    setHeroArray([...heroArray, disselectedHero]);\n  };\n\n  const handleLogIn = signedInTeam => {\n    setLogIn(true);\n    setCurrentTeam(signedInTeam);\n  };\n\n  useEffect(() => {\n    // fetch('http://localhost:3000/heroes')\n    fetch(`https://api.nasa.gov/planetary/apod?api_key=${apiKey}&start_date=2021-09-01&end_date=2021-09-20`) // fetch('https://gateway.marvel.com:443/v1/public/characters?apikey=c8d257c5c8de3331d6de741ea71c6a3a')\n    .then(response => response.json()).then(heroData => {\n      console.log(heroData);\n      setNasaImage(heroData);\n      setIsLoadedHeroes(true); // let heroes = heroData.data.results.map(hero => hero)\n      // setHeroArray(heroes)\n      // setIsLoadedHeroes(true)\n    }); // .then(heroData => setHeroArray(heroData.data.map(results => results.hero)))\n    // .then(heroData => heroData.data.results.map(hero => console.log(hero)))\n    // .then(heroData => setHeroArray(heroData))\n  }, [heroArrayParse]);\n  if (!isLoadedHeroes) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 31\n  }, this); // useEffect(() => {\n  //   fetch('http://localhost:3000/heroes')\n  //   // fetch('https://gateway.marvel.com:443/v1/public/characters?name=Deadpool&apikey=c8d257c5c8de3331d6de741ea71c6a3a')\n  //   .then(response => response.json())\n  //   // .then(heroData => console.log(heroData))\n  //   .then(heroData => setHeroArray(heroData))\n  // }, [])\n  // // Might need help from Angelo for this one\n  // teamArray.map(hero => console.log(hero))\n  // console.log(heroArray[1])\n  // // console.log(heroArray)\n  // // setHeroArray(heroArray.filter(individual => individual.id !== hero.id))\n  // const displayArray = heroArray.filter((hero) => {\n  //   let teamArrayHeroes = teamArray.map(hero => hero)\n  //   return hero.id !== teamArrayHeroes.heroId\n  // })\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isLoggedIn: isLoggedIn,\n      setLogIn: setLogIn,\n      currentTeam: currentTeam\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: () => /*#__PURE__*/_jsxDEV(Home, {\n          heroArray: heroArray //  displayArray={displayArray}\n          ,\n          nasaImage: nasaImage,\n          heroSelectionArray: heroSelectionArray,\n          onAddToTeamBtnClick: onAddToTeamBtnClick,\n          onDisselectBtnClickInSelection: onDisselectBtnClickInSelection,\n          heroArrayParse: heroArrayParse,\n          setHeroArrayParse: setHeroArrayParse,\n          isLoadedHeroes: isLoadedHeroes,\n          currentTeam: currentTeam\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/recruit/:id\",\n        component: () => /*#__PURE__*/_jsxDEV(RecruitDetails, {\n          isLoggedIn: isLoggedIn,\n          onHeroSelection: onHeroSelection,\n          setHeroArray: setHeroArray,\n          heroArray: heroArray\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/team/:id\",\n        component: () => /*#__PURE__*/_jsxDEV(TeamDetails, {\n          onHeroSelection: onHeroSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/team\",\n        component: () => /*#__PURE__*/_jsxDEV(Team, {\n          currentTeam: currentTeam,\n          isLoggedIn: isLoggedIn\n          /*teamArray={teamArray} setTeamArray={setTeamArray}*/\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 52\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/addhero\",\n        component: () => /*#__PURE__*/_jsxDEV(NewHeroForm, {\n          currentTeam: currentTeam,\n          isLoggedIn: isLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/signin\",\n        component: () => /*#__PURE__*/_jsxDEV(SignIn, {\n          onExistingTeamLogIn: handleLogIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/signup\",\n        component: () => /*#__PURE__*/_jsxDEV(SignUp, {\n          onNewTeamSubmit: handleLogIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"N3VugoWkwV+AjLetlyRwHA25vYY=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alexcalvert/Development/code/Shopify/front-end-application/spacestagram/src/components/App.js"],"names":["React","useEffect","useState","Header","Home","Team","SignIn","SignUp","RecruitDetails","NewHeroForm","TeamDetails","Route","Switch","useHistory","apiKey","App","heroArray","setHeroArray","heroArrayParse","setHeroArrayParse","heroSelectionArray","setHeroSelectionArray","isLoggedIn","setLogIn","currentTeam","setCurrentTeam","isLoadedHeroes","setIsLoadedHeroes","nasaImage","setNasaImage","history","flag","onHeroSelection","selectedHero","length","console","log","map","hero","id","heroArrayAfterSelect","filter","onAddToTeamBtnClick","fetch","method","headers","body","JSON","stringify","userId","heroId","name","image","thumbnail","path","extension","description","catch","error","onDisselectBtnClickInSelection","disselectedHero","handleLogIn","signedInTeam","then","response","json","heroData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport '../assets/App.css';\nimport Header from \"./Header\"\nimport Home from \"./Home\"\nimport Team from \"./Team\"\nimport SignIn from \"./SignIn\"\nimport SignUp from \"./SignUp\"\nimport RecruitDetails from \"./RecruitDetails\"\nimport NewHeroForm from \"./NewHeroForm\"\nimport TeamDetails from \"./TeamDetails\"\n\n/* Import Route and Switch properties from react-router dom.\n The former allows assigned routing to varying components \nmodel parent/child branch behavior as a sitemap, while\nthe former allow us the assignment itself. */\n// Tip: don't forget to run npm install react-router dom !\nimport { Route, Switch, useHistory } from 'react-router-dom'\n\nconst apiKey = \"quqeczazJ4D6huLcVhNJljA58RhApMCyv3KleLZk\"\n\nfunction App() {\n  const [heroArray, setHeroArray] = useState([])\n  const [heroArrayParse, setHeroArrayParse ] = useState(0)\n  const [heroSelectionArray, setHeroSelectionArray] = useState([])\n  const [isLoggedIn, setLogIn] = useState(false)\n  const [currentTeam, setCurrentTeam] = useState(null)\n  const [isLoadedHeroes, setIsLoadedHeroes] = useState(false)\n  const [nasaImage, setNasaImage] = useState(null)\n  // const [teamArray, setTeamArray] = useState([])\n  // const [displayArray, setDisplayArray] = useState([])\n  \n  // const [teamMemberArrayfromDB, setTeamMemberArrayfromDB] = ([])\n  \n  const history = useHistory();\n\n  //callback function pass down to RecruitDetail page for the Enlist Btn\n  let flag = true;\n  const onHeroSelection = (selectedHero) => {\n      if (heroSelectionArray.length === 0 ) {\n        setHeroSelectionArray([...heroSelectionArray, selectedHero])\n        console.log(heroSelectionArray)\n      } else { heroSelectionArray.map(hero => {\n        // console.log(hero.id, selectedHero.id)\n                if (hero.id === selectedHero.id) {\n                    flag = false; \n          }\n    })\n    if (flag){\n      setHeroSelectionArray([...heroSelectionArray, selectedHero])\n      \n    }\n  }\n    //add hero to the heroSelectionArray \n    // if (selectedHero.id)\n    \n    //make this herocard disappear from RecruitList\n    const heroArrayAfterSelect = heroArray.filter(hero=>hero.id !== selectedHero.id)\n    setHeroArray(heroArrayAfterSelect)\n  }\n\n  //callback fn pass down to HeroSelection.js for AddToTeamBtn\n  const onAddToTeamBtnClick = (heroSelectionArray) => {\n    // setTeamArray([...teamArray, heroSelectionArray])\n    console.log(heroSelectionArray)\n    \n    heroSelectionArray.map(hero => {\n      fetch(\"http://localhost:3000/teamMember\", {\n        method: 'POST',\n        headers: { \n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: currentTeam,\n          heroId: hero.id,\n          name: hero.name,\n          image: `${hero.thumbnail.path}.${hero.thumbnail.extension}`,\n          description:hero.description\n          })\n      })\n      // .then(history.push(\"/team\"))\n      .catch(error => console.error('Error:', error))\n    })    \n\n    //clear out heroSelectionArray \n    setHeroSelectionArray([]);\n  }\n\n  //handle disselectBtn click on HeroSelection\n  const onDisselectBtnClickInSelection = (disselectedHero) => {\n    //change the heroSelectionArray (disappear on the selection section)\n    setHeroSelectionArray(heroSelectionArray.filter(selectedHero => selectedHero.name !== disselectedHero.name))\n    \n    //change the heroArray (display on the recruit list section)\n    setHeroArray([...heroArray, disselectedHero])\n  }\n\n  \n\n\n  const handleLogIn = (signedInTeam) => {\n    setLogIn(true)\n    setCurrentTeam(signedInTeam)\n  }\n\n  useEffect(() => {\n    // fetch('http://localhost:3000/heroes')\n    fetch(`https://api.nasa.gov/planetary/apod?api_key=${apiKey}&start_date=2021-09-01&end_date=2021-09-20`)\n    // fetch('https://gateway.marvel.com:443/v1/public/characters?apikey=c8d257c5c8de3331d6de741ea71c6a3a')\n    .then(response => response.json())\n    .then(heroData => {\n      console.log(heroData)\n      setNasaImage(heroData)\n      setIsLoadedHeroes(true)\n      // let heroes = heroData.data.results.map(hero => hero)\n      // setHeroArray(heroes)\n      // setIsLoadedHeroes(true)\n    })\n    // .then(heroData => setHeroArray(heroData.data.map(results => results.hero)))\n    // .then(heroData => heroData.data.results.map(hero => console.log(hero)))\n    // .then(heroData => setHeroArray(heroData))\n  }, [heroArrayParse])\n\n  if (!isLoadedHeroes) return <h2>Loading...</h2>\n  \n  // useEffect(() => {\n  //   fetch('http://localhost:3000/heroes')\n  //   // fetch('https://gateway.marvel.com:443/v1/public/characters?name=Deadpool&apikey=c8d257c5c8de3331d6de741ea71c6a3a')\n  //   .then(response => response.json())\n  //   // .then(heroData => console.log(heroData))\n  //   .then(heroData => setHeroArray(heroData))\n  // }, [])\n\n\n  // // Might need help from Angelo for this one\n  // teamArray.map(hero => console.log(hero))\n  // console.log(heroArray[1])\n  // // console.log(heroArray)\n  // // setHeroArray(heroArray.filter(individual => individual.id !== hero.id))\n  // const displayArray = heroArray.filter((hero) => {\n  //   let teamArrayHeroes = teamArray.map(hero => hero)\n  //   return hero.id !== teamArrayHeroes.heroId\n  // })\n\n  return (\n    <div >\n      <Header isLoggedIn={isLoggedIn} setLogIn={setLogIn} currentTeam={currentTeam} />\n      <Switch>\n\n        <Route exact path=\"/\" component={() => <Home heroArray={heroArray} \n                                                    //  displayArray={displayArray}\n                                                     nasaImage={nasaImage}\n                                                     heroSelectionArray={heroSelectionArray} \n                                                     onAddToTeamBtnClick={onAddToTeamBtnClick}\n                                                     onDisselectBtnClickInSelection={onDisselectBtnClickInSelection}\n                                                     heroArrayParse={heroArrayParse}\n                                                     setHeroArrayParse={setHeroArrayParse}\n                                                     isLoadedHeroes={isLoadedHeroes}\n                                                     currentTeam={currentTeam}\n                                                     /> }  />\n        <Route path=\"/recruit/:id\" component={() => <RecruitDetails isLoggedIn={isLoggedIn} onHeroSelection={onHeroSelection} setHeroArray={setHeroArray} heroArray={heroArray}/> }  />\n        <Route path=\"/team/:id\" component={() => <TeamDetails onHeroSelection={onHeroSelection} /> }  />\n        <Route exact path=\"/team\" component={() => <Team currentTeam={currentTeam} isLoggedIn={isLoggedIn} /*teamArray={teamArray} setTeamArray={setTeamArray}*/\n                                                      /> }  />\n        <Route exact path=\"/addhero\" component={() => <NewHeroForm currentTeam={currentTeam} isLoggedIn={isLoggedIn}/> }  />\n        {/* <Route path=\"/team/:id\" component={() => <RecruitDetails /> }  /> */}\n        <Route exact path=\"/signin\" component={() => <SignIn onExistingTeamLogIn={handleLogIn} /> }  />\n        <Route exact path=\"/signup\" component={() => <SignUp onNewTeamSubmit={handleLogIn} /> }  />\n      </Switch>\n\n\n      {/* <Home heroArray={heroArray} />\n\n      <Team />\n\n      <SignIn />\n\n      <SignUp /> */}\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}