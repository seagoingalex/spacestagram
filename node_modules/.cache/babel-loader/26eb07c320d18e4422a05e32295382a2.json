{"ast":null,"code":"var _jsxFileName = \"/Users/alexcalvert/Development/code/Shopify/front-end-application/spacestagram/src/components/NewApodForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  typography: {\n    padding: theme.spacing(2),\n    color: \"black\"\n  }\n}));\n\nfunction NewApodForm({\n  currentProfile,\n  isLoggedIn\n}) {\n  _s();\n\n  const [apodTitle, setApodTitle] = useState(\"\");\n  const [apodImage, setApodImage] = useState(\"\");\n  const [apodExplanation, setApodExplanation] = useState(\"\");\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [anchorLa, setAnchorLa] = React.useState(null);\n  const classes = useStyles();\n  let history = useHistory();\n\n  function handleApodTitleInput(e) {\n    setApodTitle(e.target.value);\n  }\n\n  function handleApodImageInput(e) {\n    setApodImage(e.target.value);\n  }\n\n  function handleApodExplanationInput(e) {\n    setApodExplanation(e.target.value);\n  }\n\n  function apodFormSubmit(e) {\n    e.preventDefault();\n\n    if (isLoggedIn && apodTitle && apodImage && apodExplanation) {\n      let today = new Date();\n      let dd = String(today.getDate()).padStart(2, '0');\n      let mm = String(today.getMonth() + 1).padStart(2, '0');\n      let yyyy = today.getFullYear();\n      today = yyyy + '-' + mm + '-' + dd;\n      const newApod = {\n        title: apodTitle,\n        url: apodImage,\n        explanation: apodExplanation,\n        userId: currentProfile,\n        date: today\n      };\n      fetch(\"http://localhost:3001/teamMember\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newApod)\n      }); // Still working out issue with pushing users to profile before the form-entered image gets POST'd.\n      // history.push(\"/profile\")\n\n      history.push(\"/\");\n    } else if (!isLoggedIn) {\n      setAnchorEl(e.currentTarget);\n    } else if (!apodTitle || !apodImage || !apodExplanation) {\n      setAnchorLa(e.currentTarget);\n    }\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    setAnchorLa(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const submitId = open ? 'simple-popover' : undefined;\n  const open2 = Boolean(anchorLa);\n  const textFieldId = open2 ? 'simple-popover' : undefined;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"black-font\",\n        children: \"Add your own space photography!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        onSubmit: e => apodFormSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          value: apodTitle,\n          onChange: handleApodTitleInput,\n          type: \"text\",\n          placeholder: \"Image title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 133\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          value: apodImage,\n          onChange: handleApodImageInput,\n          type: \"text\",\n          placeholder: \"Image URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 132\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          value: apodExplanation,\n          onChange: handleApodExplanationInput,\n          type: \"text\",\n          placeholder: \"Tell us about your image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 159\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          value: \"Add hero\",\n          children: \"Add Custom Favorite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      id: submitId,\n      open: open,\n      anchorEl: anchorEl,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.typography,\n        children: \"You must be signed in to create a new galactic image!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      id: textFieldId,\n      open: open2,\n      anchorEl: anchorLa,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.typography,\n        children: \"Please make sure you have filled in all blank fields\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NewApodForm, \"dyAQlSetj5YCoJRWHmgmXpZN5v8=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = NewApodForm;\nexport default NewApodForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewApodForm\");","map":{"version":3,"sources":["/Users/alexcalvert/Development/code/Shopify/front-end-application/spacestagram/src/components/NewApodForm.js"],"names":["React","useState","useHistory","makeStyles","TextField","Popover","Typography","useStyles","theme","root","margin","spacing","width","typography","padding","color","NewApodForm","currentProfile","isLoggedIn","apodTitle","setApodTitle","apodImage","setApodImage","apodExplanation","setApodExplanation","anchorEl","setAnchorEl","anchorLa","setAnchorLa","classes","history","handleApodTitleInput","e","target","value","handleApodImageInput","handleApodExplanationInput","apodFormSubmit","preventDefault","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","newApod","title","url","explanation","userId","date","fetch","method","headers","body","JSON","stringify","push","currentTarget","handleClose","open","Boolean","submitId","undefined","open2","textFieldId","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n    typography: {\n        padding: theme.spacing(2),\n        color: \"black\"\n      },\n  }));\n\nfunction NewApodForm({ currentProfile, isLoggedIn }) {\n    const [apodTitle, setApodTitle] = useState(\"\")\n    const [apodImage, setApodImage] = useState(\"\")\n    const [apodExplanation, setApodExplanation] = useState(\"\")\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [anchorLa, setAnchorLa] = React.useState(null);\n\n    const classes = useStyles();\n\n    let history = useHistory();\n\n    function handleApodTitleInput(e) {\n      setApodTitle(e.target.value)\n    }\n\n    function handleApodImageInput(e) {\n      setApodImage(e.target.value)\n    }\n\n    function handleApodExplanationInput(e) {\n      setApodExplanation(e.target.value)\n    }\n\n    function apodFormSubmit(e) {\n        e.preventDefault();\n        if (isLoggedIn && apodTitle && apodImage && apodExplanation) {\n        \n        let today = new Date();  \n        let dd = String(today.getDate()).padStart(2, '0');\n        let mm = String(today.getMonth() + 1).padStart(2, '0');\n        let yyyy = today.getFullYear();\n          \n        today = yyyy + '-' + mm + '-' + dd;\n        const newApod = {\n            title: apodTitle,\n            url: apodImage,\n            explanation: apodExplanation,\n            userId: currentProfile,\n            date: today\n        }\n        fetch(\"http://localhost:3001/teamMember\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(newApod)\n        })\n        // Still working out issue with pushing users to profile before the form-entered image gets POST'd.\n        // history.push(\"/profile\")\n        history.push(\"/\")\n        } else if (!isLoggedIn) {\n            setAnchorEl(e.currentTarget)\n        } else if (!apodTitle || !apodImage || !apodExplanation) {\n            setAnchorLa(e.currentTarget)\n        }\n    }\n\n    const handleClose = () => {\n        setAnchorEl(null);\n        setAnchorLa(null)\n      };\n\n      const open = Boolean(anchorEl);\n      const submitId = open ? 'simple-popover' : undefined;\n      const open2 = Boolean(anchorLa);\n      const textFieldId = open2 ? 'simple-popover' : undefined;\n\n  return (\n    <>\n    <div className=\"form-div\">\n        <br></br>\n        <h1 className=\"black-font\">Add your own space photography!</h1>\n        <form className={classes.root} onSubmit={(e) => apodFormSubmit(e)}>\n            <TextField id=\"outlined-basic\" value={apodTitle} onChange={handleApodTitleInput} type=\"text\" placeholder=\"Image title\"/><br/>\n            <TextField id=\"outlined-basic\" value={apodImage} onChange={handleApodImageInput} type=\"text\" placeholder=\"Image URL\"/> <br/>\n            <TextField id=\"outlined-basic\" value={apodExplanation} onChange={handleApodExplanationInput} type=\"text\" placeholder=\"Tell us about your image\"/> <br/>\n        \n            <button type=\"submit\" value=\"Add hero\">Add Custom Favorite</button>\n        </form>\n    </div>\n    <Popover\n        id={submitId}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Typography className={classes.typography}>You must be signed in to create a new galactic image!</Typography>\n      </Popover>\n      <Popover\n        id={textFieldId}\n        open={open2}\n        anchorEl={anchorLa}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Typography className={classes.typography}>Please make sure you have filled in all blank fields</Typography>\n      </Popover>\n    </>\n  );\n}\n\nexport default NewApodForm;"]},"metadata":{},"sourceType":"module"}