{"ast":null,"code":"import _toConsumableArray from\"/Users/alexcalvert/Development/code/Shopify/front-end-application/spacestagram/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/alexcalvert/Development/code/Shopify/front-end-application/spacestagram/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import'../assets/App.css';import Header from\"./Header\";import Home from\"./Home\";import Profile from\"./Profile\";import SignIn from\"./SignIn\";import SignUp from\"./SignUp\";import NasaDetails from\"./NasaDetails\";import NewApodForm from\"./NewApodForm\";import ProfileDetails from\"./ProfileDetails\";import{Route,Switch,useHistory}from'react-router-dom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var apiKey=\"quqeczazJ4D6huLcVhNJljA58RhApMCyv3KleLZk\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),apodArray=_useState2[0],setApodArray=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),apodArrayParse=_useState4[0],setApodArrayParse=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),apodSelectionArray=_useState6[0],setApodSelectionArray=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isLoggedIn=_useState8[0],setLogIn=_useState8[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),currentProfile=_useState10[0],setCurrentProfile=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),isLoadedImages=_useState12[0],setIsLoadedImages=_useState12[1];var _useState13=useState(null),_useState14=_slicedToArray(_useState13,2),nasaImage=_useState14[0],setNasaImage=_useState14[1];var history=useHistory();//callback function pass down to RecruitDetail page for the Enlist Btn\nvar flag=true;var onApodSelection=function onApodSelection(selectedApod){setApodSelectionArray([].concat(_toConsumableArray(apodSelectionArray),[selectedApod]));if(apodSelectionArray.length===0){setApodSelectionArray([].concat(_toConsumableArray(apodSelectionArray),[selectedApod]));}else{apodSelectionArray.map(function(apod){if(apod.id===selectedApod.id){flag=false;}});if(flag){setApodSelectionArray([].concat(_toConsumableArray(apodSelectionArray),[selectedApod]));}}//make this herocard disappear from RecruitList\nvar apodArrayAfterSelect=apodArray.filter(function(apod){return apod.id!==selectedApod.id;});setApodArray(apodArrayAfterSelect);};var onAddToProfileBtnClick=function onAddToProfileBtnClick(apodSelectionArray){apodSelectionArray.map(function(apod){fetch(\"http://localhost:3001/teamMember\",{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({userId:currentProfile,date:apod.date,title:apod.title,url:apod.url,explanation:apod.explanation})}).catch(function(error){return console.error('Error:',error);});});// clear out heroSelectionArray \nsetApodSelectionArray([]);history.push(\"/\");// Code is pushing to home for now, as pushing to team fails to render additions first\n// history.push(\"/team\")\n};var onDisselectBtnClickInSelection=function onDisselectBtnClickInSelection(disselectedApod){setApodSelectionArray(apodSelectionArray.filter(function(selectedApod){return selectedApod.name!==disselectedApod.name;}));setApodArray([].concat(_toConsumableArray(apodArray),[disselectedApod]));};var handleLogIn=function handleLogIn(signedInProfile){setLogIn(true);setCurrentProfile(signedInProfile);};useEffect(function(){fetch(\"https://api.nasa.gov/planetary/apod?api_key=\".concat(apiKey,\"&count=24\"))// Alternative approach below, using start and end dates instead of randomized 24 count\n// fetch(`https://api.nasa.gov/planetary/apod?api_key=${apiKey}&start_date=2021-09-01&end_date=2021-09-21`)\n.then(function(response){return response.json();}).then(function(apodData){setNasaImage(apodData);setIsLoadedImages(true);});},[apodArrayParse]);if(!isLoadedImages)return/*#__PURE__*/_jsx(\"h2\",{children:\"Loading...\"});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Header,{isLoggedIn:isLoggedIn,setLogIn:setLogIn,currentProfile:currentProfile}),/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",component:function component(){return/*#__PURE__*/_jsx(Home,{apodArray:apodArray//  displayArray={displayArray}\n,nasaImage:nasaImage,apodSelectionArray:apodSelectionArray,onAddToProfileBtnClick:onAddToProfileBtnClick,onDisselectBtnClickInSelection:onDisselectBtnClickInSelection,apodArrayParse:apodArrayParse,setApodArrayParse:setApodArrayParse,isLoadedImages:isLoadedImages,currentProfile:currentProfile});}}),/*#__PURE__*/_jsx(Route,{path:\"/nasa/:id\",component:function component(){return/*#__PURE__*/_jsx(NasaDetails,{apiKey:apiKey,isLoggedIn:isLoggedIn,onApodSelection:onApodSelection,setApodArray:setApodArray,apodArray:apodArray});}}),/*#__PURE__*/_jsx(Route,{path:\"/profile/:id\",component:function component(){return/*#__PURE__*/_jsx(ProfileDetails,{onApodSelection:onApodSelection});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/profile\",component:function component(){return/*#__PURE__*/_jsx(Profile,{currentProfile:currentProfile,isLoggedIn:isLoggedIn});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/addfavorite\",component:function component(){return/*#__PURE__*/_jsx(NewApodForm,{currentProfile:currentProfile,isLoggedIn:isLoggedIn});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/signin\",component:function component(){return/*#__PURE__*/_jsx(SignIn,{onExistingProfileLogIn:handleLogIn});}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/signup\",component:function component(){return/*#__PURE__*/_jsx(SignUp,{onNewProfileSubmit:handleLogIn});}})]})]});}export default App;","map":{"version":3,"sources":["/Users/alexcalvert/Development/code/Shopify/front-end-application/spacestagram/src/components/App.js"],"names":["React","useEffect","useState","Header","Home","Profile","SignIn","SignUp","NasaDetails","NewApodForm","ProfileDetails","Route","Switch","useHistory","apiKey","App","apodArray","setApodArray","apodArrayParse","setApodArrayParse","apodSelectionArray","setApodSelectionArray","isLoggedIn","setLogIn","currentProfile","setCurrentProfile","isLoadedImages","setIsLoadedImages","nasaImage","setNasaImage","history","flag","onApodSelection","selectedApod","length","map","apod","id","apodArrayAfterSelect","filter","onAddToProfileBtnClick","fetch","method","headers","body","JSON","stringify","userId","date","title","url","explanation","catch","error","console","push","onDisselectBtnClickInSelection","disselectedApod","name","handleLogIn","signedInProfile","then","response","json","apodData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport '../assets/App.css';\nimport Header from \"./Header\"\nimport Home from \"./Home\"\nimport Profile from \"./Profile\"\nimport SignIn from \"./SignIn\"\nimport SignUp from \"./SignUp\"\nimport NasaDetails from \"./NasaDetails\"\nimport NewApodForm from \"./NewApodForm\"\nimport ProfileDetails from \"./ProfileDetails\"\n\nimport { Route, Switch, useHistory } from 'react-router-dom'\n\nconst apiKey = \"quqeczazJ4D6huLcVhNJljA58RhApMCyv3KleLZk\"\n\nfunction App() {\n  const [apodArray, setApodArray] = useState([])\n  const [apodArrayParse, setApodArrayParse ] = useState(0)\n  const [apodSelectionArray, setApodSelectionArray] = useState([])\n  const [isLoggedIn, setLogIn] = useState(false)\n  const [currentProfile, setCurrentProfile] = useState(null)\n  const [isLoadedImages, setIsLoadedImages] = useState(false)\n  const [nasaImage, setNasaImage] = useState(null)\n\n  const history = useHistory();\n\n  //callback function pass down to RecruitDetail page for the Enlist Btn\n  let flag = true;\n  const onApodSelection = (selectedApod) => {\n      setApodSelectionArray([...apodSelectionArray, selectedApod])\n    \n      if (apodSelectionArray.length === 0 ) {\n        setApodSelectionArray([...apodSelectionArray, selectedApod])\n      } else { apodSelectionArray.map(apod => {\n                if (apod.id === selectedApod.id) {\n                    flag = false; \n          }\n    })\n    if (flag){\n      setApodSelectionArray([...apodSelectionArray, selectedApod])\n      \n    }\n  }\n    //make this herocard disappear from RecruitList\n    const apodArrayAfterSelect = apodArray.filter(apod=>apod.id !== selectedApod.id)\n    setApodArray(apodArrayAfterSelect)\n  }\n\n  const onAddToProfileBtnClick = (apodSelectionArray) => {\n    \n    apodSelectionArray.map(apod => {\n      fetch(\"http://localhost:3001/teamMember\", {\n        method: 'POST',\n        headers: { \n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: currentProfile,\n          date: apod.date,\n          title: apod.title,\n          url: apod.url,\n          explanation: apod.explanation\n          })\n      })\n      .catch(error => console.error('Error:', error))\n    })    \n    // clear out heroSelectionArray \n    setApodSelectionArray([]);\n    history.push(\"/\")\n    // Code is pushing to home for now, as pushing to team fails to render additions first\n    // history.push(\"/team\")\n  }\n\n  const onDisselectBtnClickInSelection = (disselectedApod) => {\n    setApodSelectionArray(apodSelectionArray.filter(selectedApod => selectedApod.name !== disselectedApod.name))\n    setApodArray([...apodArray, disselectedApod])\n  }\n\n  const handleLogIn = (signedInProfile) => {\n    setLogIn(true)\n    setCurrentProfile(signedInProfile)\n  }\n\n  useEffect(() => {\n    fetch(`https://api.nasa.gov/planetary/apod?api_key=${apiKey}&count=24`)\n    // Alternative approach below, using start and end dates instead of randomized 24 count\n    // fetch(`https://api.nasa.gov/planetary/apod?api_key=${apiKey}&start_date=2021-09-01&end_date=2021-09-21`)\n    .then(response => response.json())\n    .then(apodData => {\n      setNasaImage(apodData)\n      setIsLoadedImages(true)\n    })\n  }, [apodArrayParse])\n\n  if (!isLoadedImages) return <h2>Loading...</h2>\n\n  return (\n    <div >\n      <Header isLoggedIn={isLoggedIn} setLogIn={setLogIn} currentProfile={currentProfile} />\n      <Switch>\n\n        <Route exact path=\"/\" component={() => <Home apodArray={apodArray} \n                                                    //  displayArray={displayArray}\n                                                     nasaImage={nasaImage}\n                                                     apodSelectionArray={apodSelectionArray} \n                                                     onAddToProfileBtnClick={onAddToProfileBtnClick}\n                                                     onDisselectBtnClickInSelection={onDisselectBtnClickInSelection}\n                                                     apodArrayParse={apodArrayParse}\n                                                     setApodArrayParse={setApodArrayParse}\n                                                     isLoadedImages={isLoadedImages}\n                                                     currentProfile={currentProfile}\n                                                     /> }  />\n        <Route path=\"/nasa/:id\" component={() => <NasaDetails apiKey={apiKey} isLoggedIn={isLoggedIn} onApodSelection={onApodSelection} setApodArray={setApodArray} apodArray={apodArray}/> }  />\n        <Route path=\"/profile/:id\" component={() => <ProfileDetails onApodSelection={onApodSelection} /> }  />\n        <Route exact path=\"/profile\" component={() => <Profile currentProfile={currentProfile} isLoggedIn={isLoggedIn}/> }  />\n        <Route exact path=\"/addfavorite\" component={() => <NewApodForm currentProfile={currentProfile} isLoggedIn={isLoggedIn}/> }  />\n        <Route exact path=\"/signin\" component={() => <SignIn onExistingProfileLogIn={handleLogIn} /> }  />\n        <Route exact path=\"/signup\" component={() => <SignUp onNewProfileSubmit={handleLogIn} /> }  />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}