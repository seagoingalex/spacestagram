{"ast":null,"code":"var _jsxFileName = \"/Users/alexcalvert/Development/code/Shopify/front-end-application/spacestagram/src/components/NewApodForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button'; //uuid randomly generates an id. You might need to run\n// npm i react-uuid in the command line first!\n\nimport uuid from 'react-uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  typography: {\n    padding: theme.spacing(2),\n    color: \"black\"\n  }\n}));\n\nfunction NewApodForm({\n  currentTeam,\n  isLoggedIn\n}) {\n  _s();\n\n  const [heroName, setHeroName] = useState(\"\");\n  const [heroImage, setHeroImage] = useState(\"\");\n  const [heroDescription, setHeroDescription] = useState(\"\");\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [anchorLa, setAnchorLa] = React.useState(null);\n  const classes = useStyles();\n  let history = useHistory();\n\n  function handleHeroNameInput(e) {\n    setHeroName(e.target.value);\n  }\n\n  function handleHeroImageInput(e) {\n    setHeroImage(e.target.value);\n  }\n\n  function handleHeroDescriptionInput(e) {\n    setHeroDescription(e.target.value);\n  }\n\n  function heroFormSubmit(e) {\n    e.preventDefault();\n\n    if (isLoggedIn && heroName && heroImage && heroDescription) {\n      const newHero = {\n        name: heroName,\n        image: heroImage,\n        description: heroDescription,\n        userId: currentTeam,\n        heroId: uuid()\n      }; // onHeroFormSubmit(newHero)\n\n      fetch(\"http://localhost:3000/teamMember\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newHero)\n      });\n      history.push(\"/team\");\n    } else if (!isLoggedIn) {\n      setAnchorEl(e.currentTarget);\n    } else if (!heroName || !heroImage || !heroDescription) {\n      setAnchorLa(e.currentTarget);\n    }\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null);\n    setAnchorLa(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const submitId = open ? 'simple-popover' : undefined;\n  const open2 = Boolean(anchorLa);\n  const textFieldId = open2 ? 'simple-popover' : undefined;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-div\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"black-font\",\n        children: \"Create a hero\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        onSubmit: e => heroFormSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          value: heroName,\n          onChange: handleHeroNameInput,\n          type: \"text\",\n          placeholder: \"Hero name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 129\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          value: heroImage,\n          onChange: handleHeroImageInput,\n          type: \"text\",\n          placeholder: \"Hero image URL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 137\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"outlined-basic\",\n          value: heroDescription,\n          onChange: handleHeroDescriptionInput,\n          type: \"text\",\n          placeholder: \"Tell us about your hero\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 158\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          value: \"Add hero\",\n          children: \"Add Hero\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      id: submitId,\n      open: open,\n      anchorEl: anchorEl,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.typography,\n        children: \"You must be signed in to create a new hero!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      id: textFieldId,\n      open: open2,\n      anchorEl: anchorLa,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.typography,\n        children: \"Please make sure you have filled in all blank fields\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NewApodForm, \"SOQ5u2QDf4s+oPuBQXzPOa6vuWU=\", false, function () {\n  return [useStyles, useHistory];\n});\n\n_c = NewApodForm;\nexport default NewApodForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewApodForm\");","map":{"version":3,"sources":["/Users/alexcalvert/Development/code/Shopify/front-end-application/spacestagram/src/components/NewApodForm.js"],"names":["React","useState","useHistory","makeStyles","TextField","Popover","Typography","Button","uuid","useStyles","theme","root","margin","spacing","width","typography","padding","color","NewApodForm","currentTeam","isLoggedIn","heroName","setHeroName","heroImage","setHeroImage","heroDescription","setHeroDescription","anchorEl","setAnchorEl","anchorLa","setAnchorLa","classes","history","handleHeroNameInput","e","target","value","handleHeroImageInput","handleHeroDescriptionInput","heroFormSubmit","preventDefault","newHero","name","image","description","userId","heroId","fetch","method","headers","body","JSON","stringify","push","currentTarget","handleClose","open","Boolean","submitId","undefined","open2","textFieldId","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n//uuid randomly generates an id. You might need to run\n// npm i react-uuid in the command line first!\nimport uuid from 'react-uuid'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& > *': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n    typography: {\n        padding: theme.spacing(2),\n        color: \"black\"\n      },\n  }));\n\nfunction NewApodForm({ currentTeam, isLoggedIn }) {\n    const [heroName, setHeroName] = useState(\"\")\n    const [heroImage, setHeroImage] = useState(\"\")\n    const [heroDescription, setHeroDescription] = useState(\"\")\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const [anchorLa, setAnchorLa] = React.useState(null);\n\n    const classes = useStyles();\n\n    let history = useHistory();\n\n    function handleHeroNameInput(e) {\n        setHeroName(e.target.value)\n    }\n\n    function handleHeroImageInput(e) {\n        setHeroImage(e.target.value)\n    }\n\n    function handleHeroDescriptionInput(e) {\n        setHeroDescription(e.target.value)\n    }\n\n    function heroFormSubmit(e) {\n        e.preventDefault();\n        if (isLoggedIn && heroName && heroImage && heroDescription) {\n        const newHero = {\n            name: heroName,\n            image: heroImage,\n            description: heroDescription,\n            userId: currentTeam,\n            heroId: uuid()\n        }\n        // onHeroFormSubmit(newHero)\n        fetch(\"http://localhost:3000/teamMember\", {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(newHero)\n        })\n        history.push(\"/team\")\n        } else if (!isLoggedIn) {\n            setAnchorEl(e.currentTarget)\n        } else if (!heroName || !heroImage || !heroDescription) {\n            setAnchorLa(e.currentTarget)\n        }\n    }\n\n    const handleClose = () => {\n        setAnchorEl(null);\n        setAnchorLa(null)\n      };\n\n      const open = Boolean(anchorEl);\n      const submitId = open ? 'simple-popover' : undefined;\n      const open2 = Boolean(anchorLa);\n      const textFieldId = open2 ? 'simple-popover' : undefined;\n\n  return (\n    <>\n    <div className=\"form-div\">\n        <br></br>\n        <h1 className=\"black-font\">Create a hero</h1>\n        <form className={classes.root} onSubmit={(e) => heroFormSubmit(e)}>\n            <TextField id=\"outlined-basic\" value={heroName} onChange={handleHeroNameInput} type=\"text\" placeholder=\"Hero name\"/><br/>\n            <TextField id=\"outlined-basic\" value={heroImage} onChange={handleHeroImageInput} type=\"text\" placeholder=\"Hero image URL\"/> <br/>\n            <TextField id=\"outlined-basic\" value={heroDescription} onChange={handleHeroDescriptionInput} type=\"text\" placeholder=\"Tell us about your hero\"/> <br/>\n        \n            <button type=\"submit\" value=\"Add hero\">Add Hero</button>\n        </form>\n    </div>\n    <Popover\n        id={submitId}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Typography className={classes.typography}>You must be signed in to create a new hero!</Typography>\n      </Popover>\n      <Popover\n        id={textFieldId}\n        open={open2}\n        anchorEl={anchorLa}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Typography className={classes.typography}>Please make sure you have filled in all blank fields</Typography>\n      </Popover>\n    </>\n  );\n}\n\nexport default NewApodForm;"]},"metadata":{},"sourceType":"module"}