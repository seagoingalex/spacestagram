{"ast":null,"code":"var _jsxFileName = \"/Users/alexcalvert/Development/code/Shopify/front-end-application/spacestagram/src/components/NasaDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  typography: {\n    padding: theme.spacing(2),\n    color: \"black\"\n  }\n}));\n\nfunction NasaDetails({\n  onApodSelection,\n  isLoggedIn,\n  setApodArray,\n  apodArray,\n  apiKey\n}) {\n  _s();\n\n  const [apod, setApod] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const {\n    id\n  } = useParams();\n  const history = useHistory();\n\n  function handleBack() {\n    history.goBack();\n  }\n\n  useEffect(() => {\n    fetch(`https://api.nasa.gov/planetary/apod?api_key=${apiKey}&date=${id}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(r => r.json()).then(apod => {\n      console.log(apod);\n      setApod(apod);\n      setIsLoaded(true);\n    }).catch(e => {\n      console.log(e);\n    });\n  }, [id]);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 27\n  }, this);\n\n  const enlistClickHandler = (e, hero) => {\n    if (isLoggedIn) {\n      //add hero to the heroSelectionArray & make this herocard disappear from RecruitList\n      //callback fn defined on App.js\n      onApodSelection(hero);\n      console.log(hero);\n      setApodArray(apodArray.filter(individual => individual.id !== hero.id)); //push the page back to the home page \n\n      history.push('/');\n    } else {\n      setAnchorEl(e.currentTarget);\n    }\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  const modalId = open ? 'simple-popover' : undefined;\n  const apodImage = apod.url;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recruitDetailsContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail-left-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"detail-img\",\n          src: apodImage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btngroup\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"detail-btn\",\n            onClick: handleBack,\n            children: \" Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"detail-btn\",\n            onClick: e => {\n              enlistClickHandler(e, apod);\n            },\n            children: \" Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"detail-right-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"detail-name\",\n          children: [\" \", apod.date, \" | \", apod.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"detail-description\",\n          children: \"Description:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", apod.explanation]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      id: modalId,\n      open: open,\n      anchorEl: anchorEl,\n      onClose: handleClose,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'top',\n        horizontal: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.typography,\n        children: \"You must be signed in to add images to your favorites!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NasaDetails, \"0Uy/vIODz+itmm0tvRPJcTQiNk0=\", false, function () {\n  return [useStyles, useParams, useHistory];\n});\n\n_c = NasaDetails;\nexport default NasaDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"NasaDetails\");","map":{"version":3,"sources":["/Users/alexcalvert/Development/code/Shopify/front-end-application/spacestagram/src/components/NasaDetails.js"],"names":["React","useEffect","useState","useHistory","useParams","makeStyles","Popover","Typography","useStyles","theme","typography","padding","spacing","color","NasaDetails","onApodSelection","isLoggedIn","setApodArray","apodArray","apiKey","apod","setApod","isLoaded","setIsLoaded","classes","anchorEl","setAnchorEl","id","history","handleBack","goBack","fetch","method","headers","then","r","json","console","log","catch","e","enlistClickHandler","hero","filter","individual","push","currentTarget","handleClose","open","Boolean","modalId","undefined","apodImage","url","date","title","explanation","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles((theme) => ({\n  typography: {\n    padding: theme.spacing(2),\n    color: \"black\"\n  },\n}));\n\nfunction NasaDetails({ onApodSelection, isLoggedIn, setApodArray, apodArray, apiKey }) {\n    const [apod, setApod] = useState(null)\n    const [isLoaded, setIsLoaded] = useState(false)\n    const classes = useStyles();\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const { id } = useParams()\n\n    const history = useHistory();\n    \n    function handleBack() {\n        history.goBack()\n    }\n\n    useEffect(() => {\n      fetch(`https://api.nasa.gov/planetary/apod?api_key=${apiKey}&date=${id}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n        .then((r) => r.json())\n        .then(apod => {\n          console.log(apod)\n          setApod(apod);\n          setIsLoaded(true);\n        \n        })\n        .catch(e => {\n          console.log(e);\n        });\n    }, [id]);\n\n    if (!isLoaded) return <h2>Loading...</h2>;\n\n    const enlistClickHandler = (e, hero) => {\n      if(isLoggedIn) {\n      //add hero to the heroSelectionArray & make this herocard disappear from RecruitList\n      //callback fn defined on App.js\n      onApodSelection(hero)\n      console.log(hero)\n      setApodArray(apodArray.filter(individual => individual.id !== hero.id))\n      //push the page back to the home page \n      history.push('/')  \n      } else {\n        setAnchorEl(e.currentTarget)\n      }\n    }\n\n    const handleClose = () => {\n      setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n    const modalId = open ? 'simple-popover' : undefined;\n\n    const apodImage = apod.url\n\n  return (\n    <>\n    <div className=\"recruitDetailsContainer\">\n\n      <div className=\"detail-left-container\">\n        <img className=\"detail-img\" src={apodImage}/>\n       \n        <div className=\"btngroup\">\n          <button className=\"detail-btn\" onClick={handleBack}> Go Back</button>\n          <button className=\"detail-btn\" onClick={(e)=>{enlistClickHandler(e, apod)}}> Select</button>\n        </div>\n      </div>\n\n      <div className=\"detail-right-container\">\n        <h2 className=\"detail-name\"> {apod.date} | {apod.title}</h2>\n        <h3 className=\"detail-description\">Description:</h3>\n        <p> {apod.explanation}</p>\n      </div>\n\n    </div>\n    <Popover\n        id={modalId}\n        open={open}\n        anchorEl={anchorEl}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n        <Typography className={classes.typography}>You must be signed in to add images to your favorites!</Typography>\n      </Popover>\n    </>\n  );\n}\n\nexport default NasaDetails;"]},"metadata":{},"sourceType":"module"}