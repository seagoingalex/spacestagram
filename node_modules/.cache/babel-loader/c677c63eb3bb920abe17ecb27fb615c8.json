{"ast":null,"code":"var _jsxFileName = \"/Users/alexcalvert/Development/code/Shopify/front-end-application/spacestagram/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport '../assets/App.css';\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport Profile from \"./Profile\";\nimport SignIn from \"./SignIn\";\nimport SignUp from \"./SignUp\";\nimport NasaDetails from \"./NasaDetails\";\nimport NewApodForm from \"./NewApodForm\";\nimport ProfileDetails from \"./ProfileDetails\";\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = \"quqeczazJ4D6huLcVhNJljA58RhApMCyv3KleLZk\";\n\nfunction App() {\n  _s();\n\n  const [apodArray, setApodArray] = useState([]);\n  const [apodArrayParse, setApodArrayParse] = useState(0);\n  const [apodSelectionArray, setApodSelectionArray] = useState([]);\n  const [isLoggedIn, setLogIn] = useState(false);\n  const [currentProfile, setCurrentProfile] = useState(null);\n  const [isLoadedImages, setIsLoadedImages] = useState(false);\n  const [nasaImage, setNasaImage] = useState(null);\n  const history = useHistory(); //callback function pass down to RecruitDetail page for the Enlist Btn\n\n  let flag = true;\n\n  const onApodSelection = selectedApod => {\n    setApodSelectionArray([...apodSelectionArray, selectedApod]);\n\n    if (apodSelectionArray.length === 0) {\n      setApodSelectionArray([...apodSelectionArray, selectedApod]);\n    } else {\n      apodSelectionArray.map(apod => {\n        if (apod.id === selectedApod.id) {\n          flag = false;\n        }\n      });\n\n      if (flag) {\n        setApodSelectionArray([...apodSelectionArray, selectedApod]);\n      }\n    }\n\n    const apodArrayAfterSelect = apodArray.filter(apod => apod.id !== selectedApod.id);\n    setApodArray(apodArrayAfterSelect);\n  };\n\n  const onAddToProfileBtnClick = apodSelectionArray => {\n    apodSelectionArray.map(apod => {\n      fetch(\"http://localhost:3001/teamMember\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: currentProfile,\n          date: apod.date,\n          title: apod.title,\n          url: apod.url,\n          explanation: apod.explanation\n        })\n      }).catch(error => console.error('Error:', error));\n    });\n    setApodSelectionArray([]);\n    history.push(\"/\"); // Code is pushing to home for now, as pushing to team fails to render additions first\n    // history.push(\"/team\")\n  };\n\n  const onDisselectBtnClickInSelection = disselectedApod => {\n    setApodSelectionArray(apodSelectionArray.filter(selectedApod => selectedApod.name !== disselectedApod.name));\n    setApodArray([...apodArray, disselectedApod]);\n  };\n\n  const handleLogIn = signedInProfile => {\n    setLogIn(true);\n    setCurrentProfile(signedInProfile);\n  };\n\n  useEffect(() => {\n    fetch(`https://api.nasa.gov/planetary/apod?api_key=${apiKey}&count=24`) // Alternative approach below, using start and end dates instead of randomized 24 count\n    // fetch(`https://api.nasa.gov/planetary/apod?api_key=${apiKey}&start_date=2021-09-01&end_date=2021-09-21`)\n    .then(response => response.json()).then(apodData => {\n      setNasaImage(apodData);\n      setIsLoadedImages(true);\n    });\n  }, [apodArrayParse]);\n  if (!isLoadedImages) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 31\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      isLoggedIn: isLoggedIn,\n      setLogIn: setLogIn,\n      currentProfile: currentProfile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: () => /*#__PURE__*/_jsxDEV(Home, {\n          apodArray: apodArray,\n          nasaImage: nasaImage,\n          apodSelectionArray: apodSelectionArray,\n          onAddToProfileBtnClick: onAddToProfileBtnClick,\n          onDisselectBtnClickInSelection: onDisselectBtnClickInSelection,\n          apodArrayParse: apodArrayParse,\n          setApodArrayParse: setApodArrayParse,\n          isLoadedImages: isLoadedImages,\n          currentProfile: currentProfile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/nasa/:id\",\n        component: () => /*#__PURE__*/_jsxDEV(NasaDetails, {\n          apiKey: apiKey,\n          isLoggedIn: isLoggedIn,\n          onApodSelection: onApodSelection,\n          setApodArray: setApodArray,\n          apodArray: apodArray\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile/:id\",\n        component: () => /*#__PURE__*/_jsxDEV(ProfileDetails, {\n          onApodSelection: onApodSelection\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/profile\",\n        component: () => /*#__PURE__*/_jsxDEV(Profile, {\n          currentProfile: currentProfile,\n          isLoggedIn: isLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 55\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/addfavorite\",\n        component: () => /*#__PURE__*/_jsxDEV(NewApodForm, {\n          currentProfile: currentProfile,\n          isLoggedIn: isLoggedIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/signin\",\n        component: () => /*#__PURE__*/_jsxDEV(SignIn, {\n          onExistingProfileLogIn: handleLogIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/signup\",\n        component: () => /*#__PURE__*/_jsxDEV(SignUp, {\n          onNewProfileSubmit: handleLogIn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"n/0zyIWXtb7fqi7qhnGHw0pMrKY=\", false, function () {\n  return [useHistory];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/alexcalvert/Development/code/Shopify/front-end-application/spacestagram/src/components/App.js"],"names":["React","useEffect","useState","Header","Home","Profile","SignIn","SignUp","NasaDetails","NewApodForm","ProfileDetails","Route","Switch","useHistory","apiKey","App","apodArray","setApodArray","apodArrayParse","setApodArrayParse","apodSelectionArray","setApodSelectionArray","isLoggedIn","setLogIn","currentProfile","setCurrentProfile","isLoadedImages","setIsLoadedImages","nasaImage","setNasaImage","history","flag","onApodSelection","selectedApod","length","map","apod","id","apodArrayAfterSelect","filter","onAddToProfileBtnClick","fetch","method","headers","body","JSON","stringify","userId","date","title","url","explanation","catch","error","console","push","onDisselectBtnClickInSelection","disselectedApod","name","handleLogIn","signedInProfile","then","response","json","apodData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport '../assets/App.css';\nimport Header from \"./Header\"\nimport Home from \"./Home\"\nimport Profile from \"./Profile\"\nimport SignIn from \"./SignIn\"\nimport SignUp from \"./SignUp\"\nimport NasaDetails from \"./NasaDetails\"\nimport NewApodForm from \"./NewApodForm\"\nimport ProfileDetails from \"./ProfileDetails\"\n\nimport { Route, Switch, useHistory } from 'react-router-dom'\n\nconst apiKey = \"quqeczazJ4D6huLcVhNJljA58RhApMCyv3KleLZk\"\n\nfunction App() {\n  const [apodArray, setApodArray] = useState([])\n  const [apodArrayParse, setApodArrayParse ] = useState(0)\n  const [apodSelectionArray, setApodSelectionArray] = useState([])\n  const [isLoggedIn, setLogIn] = useState(false)\n  const [currentProfile, setCurrentProfile] = useState(null)\n  const [isLoadedImages, setIsLoadedImages] = useState(false)\n  const [nasaImage, setNasaImage] = useState(null)\n\n  const history = useHistory();\n\n  //callback function pass down to RecruitDetail page for the Enlist Btn\n  let flag = true;\n  const onApodSelection = (selectedApod) => {\n      setApodSelectionArray([...apodSelectionArray, selectedApod])\n    \n      if (apodSelectionArray.length === 0 ) {\n        setApodSelectionArray([...apodSelectionArray, selectedApod])\n      } else { apodSelectionArray.map(apod => {\n                if (apod.id === selectedApod.id) {\n                    flag = false; \n          }\n    })\n    if (flag){\n      setApodSelectionArray([...apodSelectionArray, selectedApod])\n      \n    }\n  }\n    const apodArrayAfterSelect = apodArray.filter(apod=>apod.id !== selectedApod.id)\n    setApodArray(apodArrayAfterSelect)\n  }\n\n  const onAddToProfileBtnClick = (apodSelectionArray) => {\n    \n    apodSelectionArray.map(apod => {\n      fetch(\"http://localhost:3001/teamMember\", {\n        method: 'POST',\n        headers: { \n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: currentProfile,\n          date: apod.date,\n          title: apod.title,\n          url: apod.url,\n          explanation: apod.explanation\n          })\n      })\n      .catch(error => console.error('Error:', error))\n    })    \n    setApodSelectionArray([]);\n    history.push(\"/\")\n    // Code is pushing to home for now, as pushing to team fails to render additions first\n    // history.push(\"/team\")\n  }\n\n  const onDisselectBtnClickInSelection = (disselectedApod) => {\n    setApodSelectionArray(apodSelectionArray.filter(selectedApod => selectedApod.name !== disselectedApod.name))\n    setApodArray([...apodArray, disselectedApod])\n  }\n\n  const handleLogIn = (signedInProfile) => {\n    setLogIn(true)\n    setCurrentProfile(signedInProfile)\n  }\n\n  useEffect(() => {\n    fetch(`https://api.nasa.gov/planetary/apod?api_key=${apiKey}&count=24`)\n    // Alternative approach below, using start and end dates instead of randomized 24 count\n    // fetch(`https://api.nasa.gov/planetary/apod?api_key=${apiKey}&start_date=2021-09-01&end_date=2021-09-21`)\n    .then(response => response.json())\n    .then(apodData => {\n      setNasaImage(apodData)\n      setIsLoadedImages(true)\n    })\n  }, [apodArrayParse])\n\n  if (!isLoadedImages) return <h2>Loading...</h2>\n\n  return (\n    <div >\n      <Header isLoggedIn={isLoggedIn} setLogIn={setLogIn} currentProfile={currentProfile} />\n      <Switch>\n\n        <Route exact path=\"/\" component={() => <Home apodArray={apodArray} \n                                                     nasaImage={nasaImage}\n                                                     apodSelectionArray={apodSelectionArray} \n                                                     onAddToProfileBtnClick={onAddToProfileBtnClick}\n                                                     onDisselectBtnClickInSelection={onDisselectBtnClickInSelection}\n                                                     apodArrayParse={apodArrayParse}\n                                                     setApodArrayParse={setApodArrayParse}\n                                                     isLoadedImages={isLoadedImages}\n                                                     currentProfile={currentProfile}\n                                                     /> }  />\n        <Route path=\"/nasa/:id\" component={() => <NasaDetails apiKey={apiKey} isLoggedIn={isLoggedIn} onApodSelection={onApodSelection} setApodArray={setApodArray} apodArray={apodArray}/> }  />\n        <Route path=\"/profile/:id\" component={() => <ProfileDetails onApodSelection={onApodSelection} /> }  />\n        <Route exact path=\"/profile\" component={() => <Profile currentProfile={currentProfile} isLoggedIn={isLoggedIn}/> }  />\n        <Route exact path=\"/addfavorite\" component={() => <NewApodForm currentProfile={currentProfile} isLoggedIn={isLoggedIn}/> }  />\n        <Route exact path=\"/signin\" component={() => <SignIn onExistingProfileLogIn={handleLogIn} /> }  />\n        <Route exact path=\"/signup\" component={() => <SignUp onNewProfileSubmit={handleLogIn} /> }  />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}